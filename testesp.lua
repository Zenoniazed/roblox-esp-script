-- üü¢ T·∫°o GUI Menu
local ScreenGui = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local ESPButton = Instance.new("TextButton")
local NoclipButton = Instance.new("TextButton") -- üü¢ N√∫t Noclip
local AimbotButton = Instance.new("TextButton")
local FullbrightButton = Instance.new("TextButton") -- üü¢ N√∫t Fullbright
local OptionsFrame = Instance.new("Frame")

local options = {
    { name = "V·∫≠t ph·∫©m", enabled = false },
    { name = "Enemies b√°n ƒë∆∞·ª£c", enabled = false },
    { name = "Mob hi·∫øm", enabled = false },
    { name = "Zombies", enabled = false },
    { name = "V≈© kh√≠", enabled = false },
}

ScreenGui.Parent = game.CoreGui

-- üü¢ Khung ch√≠nh (Nh·ªè g·ªçn h∆°n)
MainFrame.Parent = ScreenGui
MainFrame.Size = UDim2.new(0, 310, 0, 50) -- üü¢ TƒÉng chi·ªÅu cao ƒë·ªÉ ch·ª©a Noclip
MainFrame.Position = UDim2.new(0, 50, 0, 50)
MainFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
MainFrame.BorderSizePixel = 2
MainFrame.Active = true

-- üü¢ N√∫t ESP (Chi·∫øm to√†n b·ªô MainFrame)
ESPButton.Parent = MainFrame
ESPButton.Size = UDim2.new(0, 60, 0, 40) -- üü¢ Gi·ªØ nguy√™n k√≠ch th∆∞·ªõc
ESPButton.Position = UDim2.new(0, 15, 0, 5)
ESPButton.Text = "ESP"
ESPButton.BackgroundColor3 = Color3.fromRGB(200, 200, 200)

-- üü¢ N√∫t Noclip (M·ªõi th√™m v√†o)
NoclipButton.Parent = MainFrame
NoclipButton.Size = UDim2.new(0, 60, 0, 40)
NoclipButton.Position = UDim2.new(0, 75, 0, 5)
NoclipButton.Text = "Noclip"
NoclipButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- M√†u ƒë·ªè khi t·∫Øt

-- üü¢ N√∫t Aimbot
AimbotButton.Parent = MainFrame
AimbotButton.Size = UDim2.new(0, 60, 0, 40)
AimbotButton.Position = UDim2.new(0, 135, 0, 5)            -- ƒê·∫∑t d∆∞·ªõi Noclip
AimbotButton.Text = "Aimbot"
AimbotButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- M·∫∑c ƒë·ªãnh l√† t·∫Øt

-- üü¢ N√∫t Fullbright
FullbrightButton.Parent = MainFrame
FullbrightButton.Size = UDim2.new(0, 70, 0, 40)
FullbrightButton.Position = UDim2.new(0, 200, 0, 5)
FullbrightButton.Text = "Bright"
FullbrightButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)


-- üü¢ Khung danh s√°ch ch·ªçn
OptionsFrame.Parent = ScreenGui
OptionsFrame.Size = UDim2.new(0, 150, 0, #options * 35 + 5)
OptionsFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
OptionsFrame.BorderSizePixel = 2
OptionsFrame.Visible = false

local function updateOptionsFramePosition()
    OptionsFrame.Position = UDim2.new(0, MainFrame.Position.X.Offset + MainFrame.Size.X.Offset + 5, 0,
        MainFrame.Position.Y.Offset)
end

ESPButton.MouseButton1Click:Connect(function()
    OptionsFrame.Visible = not OptionsFrame.Visible
    updateOptionsFramePosition()
end)

for i, option in ipairs(options) do
    local optionButton = Instance.new("TextButton")
    optionButton.Parent = OptionsFrame
    optionButton.Size = UDim2.new(0, 140, 0, 30)
    optionButton.Position = UDim2.new(0, 5, 0, (i - 1) * 35)
    optionButton.Text = option.name
    optionButton.BackgroundColor3 = option.enabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)

    optionButton.MouseButton1Click:Connect(function()
        option.enabled = not option.enabled
        optionButton.BackgroundColor3 = option.enabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
    end)
end

-- üü¢ H·ªó tr·ª£ k√©o th·∫£ GUI (C·∫£ PC & Mobile)
local UserInputService = game:GetService("UserInputService")
local dragging, dragInput, startPos, dragStart

local function updateDrag(input)
    local delta = input.Position - dragStart
    MainFrame.Position = UDim2.new(0, startPos.X.Offset + delta.X, 0, startPos.Y.Offset + delta.Y)
    updateOptionsFramePosition()
end

MainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

MainFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        updateDrag(input)
    end
end)

-- üü¢ Bi·∫øn ƒëi·ªÅu khi·ªÉn Fullbright
local fullbrightEnabled = false

-- üü¢ H√†m b·∫≠t/t·∫Øt Fullbright
local function toggleFullbright()
    fullbrightEnabled = not fullbrightEnabled
    FullbrightButton.BackgroundColor3 = fullbrightEnabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)

    if fullbrightEnabled then
        game:GetService("Lighting").Brightness = 1.5
        game:GetService("Lighting").ClockTime = 14.5
        game:GetService("Lighting").FogEnd = 100000
        game:GetService("Lighting").GlobalShadows = true
        print("üü¢ Fullbright ƒê√É B·∫¨T")
    else
        game:GetService("Lighting").Brightness = 1.5
        game:GetService("Lighting").ClockTime = 14.5
        game:GetService("Lighting").FogEnd = 100000
        game:GetService("Lighting").GlobalShadows = true
        print("üî¥ Fullbright ƒê√É T·∫ÆT")
    end
end

FullbrightButton.MouseButton1Click:Connect(toggleFullbright)
game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.K then
        toggleFullbright()
    end
end)

-- üü¢ Bi·∫øn ƒëi·ªÅu khi·ªÉn Noclip
local noclipEnabled = false

-- üü¢ H√†m b·∫≠t/t·∫Øt Noclip
local function toggleNoclip()
    noclipEnabled = not noclipEnabled
    NoclipButton.BackgroundColor3 = noclipEnabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)

    if noclipEnabled then
        print("üü¢ Noclip ƒê√É B·∫¨T")
    else
        print("üî¥ Noclip ƒê√É T·∫ÆT")
    end
end

-- üü¢ G√°n s·ª± ki·ªán cho n√∫t Noclip
NoclipButton.MouseButton1Click:Connect(toggleNoclip)
game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.N then
        toggleNoclip()
    end
end)

-- üü¢ C·∫≠p nh·∫≠t tr·∫°ng th√°i Noclip
game:GetService("RunService").Stepped:Connect(function()
    if noclipEnabled then
        local player = game.Players.LocalPlayer
        if player.Character then
            for _, part in pairs(player.Character:GetChildren()) do
                if part:IsA("BasePart") and part.CanCollide then
                    part.CanCollide = false -- üü¢ T·∫Øt va ch·∫°m
                end
            end
        end
    end
end)
-- üü¢ Bi·∫øn ƒëi·ªÅu khi·ªÉn Aimbot
local aimbotEnabled = false
local mouse = game.Players.LocalPlayer:GetMouse()

-- üü¢ H√†m t√¨m k·∫ª ƒë·ªãch g·∫ßn nh·∫•t (Ch·ªâ Mob/Zombie, kh√¥ng nh·∫Øm v√†o ng∆∞·ªùi ch∆°i)
local function getNearestEnemy()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then return nil end

    local nearestEnemy = nil
    local minDistance = math.huge

    for _, obj in pairs(game.Workspace:GetDescendants()) do
        if obj:IsA("Model") and obj:FindFirstChild("Humanoid") and not game.Players:GetPlayerFromCharacter(obj) then
            -- üü¢ Ki·ªÉm tra n·∫øu obj KH√îNG PH·∫¢I l√† ng∆∞·ªùi ch∆°i (b·ªè qua Player)
            local enemyHead = obj:FindFirstChild("Head") -- üîπ Ki·ªÉm tra Head thay v√¨ HumanoidRootPart
            if enemyHead then
                local distance = (hrp.Position - enemyHead.Position).Magnitude
                if distance < minDistance and distance <= 250 then -- üü¢ Gi·ªõi h·∫°n ph·∫°m vi Aimbot
                    nearestEnemy = enemyHead -- üîπ Nh·∫Øm v√†o Head thay v√¨ RootPart
                    minDistance = distance
                end
            end
        end
    end

    return nearestEnemy
end




-- üü¢ K√≠ch ho·∫°t Aimbot (Ch·ªâ nh·∫Øm v√†o Mob/Zombie, kh√¥ng nh·∫Øm v√†o Player)
game:GetService("RunService").RenderStepped:Connect(function()
    if aimbotEnabled then
        local target = getNearestEnemy()
        if target then
            local camera = game.Workspace.CurrentCamera
            camera.CFrame = CFrame.new(camera.CFrame.Position, target.Position + Vector3.new(0, 0.5, 0)) -- üîπ Nh·∫Øm cao h∆°n m·ªôt ch√∫t
        end
    end
end)



-- üü¢ N√∫t b·∫≠t/t·∫Øt Aimbot
local function toggleAimbot()
    aimbotEnabled = not aimbotEnabled
    AimbotButton.BackgroundColor3 = aimbotEnabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
    print(aimbotEnabled and "üü¢ Aimbot ƒê√É B·∫¨T" or "üî¥ Aimbot ƒê√É T·∫ÆT")
end

AimbotButton.MouseButton1Click:Connect(toggleAimbot)

-- üü¢ Danh s√°ch m√†u ESP theo danh m·ª•c
local espTargets = {
    ["GoldBar"] = { color = Color3.fromRGB(255, 238, 0), category = "V·∫≠t ph·∫©m" },
    ["Coal"] = { color = Color3.fromRGB(235, 121, 72), category = "V·∫≠t ph·∫©m" },
    ["Bond"] = { color = Color3.fromRGB(246, 14, 76), category = "V·∫≠t ph·∫©m" },
    ["Horse"] = { color = Color3.fromRGB(255, 255, 255), category = "Mob hi·∫øm" },
    ["Wolf"] = { color = Color3.fromRGB(255, 255, 255), category = "Mob hi·∫øm" },
    ["Unicorn"] = { color = Color3.fromRGB(205, 0, 255), category = "Mob hi·∫øm" },
    ["RifleOutlaw"] = { color = Color3.fromRGB(0, 213, 255), category = "Enemies b√°n ƒë∆∞·ª£c" },
    ["ShotgunOutlaw"] = { color = Color3.fromRGB(0, 213, 255), category = "Enemies b√°n ƒë∆∞·ª£c" },
    ["RevolverOutlaw"] = { color = Color3.fromRGB(0, 213, 255), category = "Enemies b√°n ƒë∆∞·ª£c" },
    ["Runner"] = { color = Color3.fromRGB(85, 0, 255), category = "Zombies" },
    ["Walker"] = { color = Color3.fromRGB(85, 0, 255), category = "Zombies" },
    ["Vampire Knife"] = { color = Color3.fromRGB(85, 200, 255), category = "V≈© kh√≠" },
    ["Revolver"] = { color = Color3.fromRGB(85, 200, 255), category = "V≈© kh√≠" },
    ["Rifle"] = { color = Color3.fromRGB(85, 200, 255), category = "V≈© kh√≠" },
    ["Bolt Action Rifle"] = { color = Color3.fromRGB(85, 200, 255), category = "V≈© kh√≠" },
    ["Shotgun"] = { color = Color3.fromRGB(85, 200, 255), category = "V≈© kh√≠" },
    ["Cavalry Sword"] = { color = Color3.fromRGB(85, 200, 255), category = "V≈© kh√≠" },
    ["Crucifix"] = { color = Color3.fromRGB(85, 200, 255), category = "V≈© kh√≠" },
    ["Molotov"] = { color = Color3.fromRGB(85, 200, 255), category = "V≈© kh√≠" },
    ["Holy Water"] = { color = Color3.fromRGB(85, 200, 255), category = "V≈© kh√≠" },
    ["RifleAmmo"] = { color = Color3.fromRGB(12, 154, 111), category = "V≈© kh√≠" },
    ["ShotgunShells"] = { color = Color3.fromRGB(12, 154, 111), category = "V≈© kh√≠" },
    ["RevolverAmmo"] = { color = Color3.fromRGB(12, 154, 111), category = "V≈© kh√≠" },

}

-- üü¢ H√†m t·∫°o ESP (Text hi·ªÉn th·ªã tr√™n ƒë·∫ßu)
local function createESP(obj, color)
    if obj:FindFirstChild("ESP_Tag") then return end

    local esp = Instance.new("BillboardGui", obj)
    esp.Name = "ESP_Tag"
    esp.Size = UDim2.new(2, 0, 1, 0)         -- Nh·ªè h∆°n tr∆∞·ªõc
    esp.StudsOffset = Vector3.new(0, 2.5, 0) -- Gi·∫£m ƒë·ªô cao ESP ƒë·ªÉ v·ª´a h∆°n
    esp.Adornee = obj:FindFirstChild("HumanoidRootPart") or obj.PrimaryPart
    esp.AlwaysOnTop = true
    esp.MaxDistance = 1000

    local text = Instance.new("TextLabel", esp)
    text.Size = UDim2.new(1, 0, 1, 0)
    text.Text = obj.Name
    text.TextColor3 = color
    text.Font = Enum.Font.GothamBold
    text.BackgroundTransparency = 1
    text.TextSize = 10
    text.TextStrokeTransparency = 0.5
end

local function getObjectPosition(obj)
    if obj:IsA("Tool") then
        return nil -- üü¢ B·ªè qua Tool ho√†n to√†n
    elseif obj:IsA("Model") then
        if obj.PrimaryPart then
            return obj.PrimaryPart.Position -- üü¢ N·∫øu Model c√≥ PrimaryPart, l·∫•y v·ªã tr√≠
        else
            for _, part in pairs(obj:GetChildren()) do
                if part:IsA("BasePart") then
                    return part.Position -- üü¢ N·∫øu Model kh√¥ng c√≥ PrimaryPart, l·∫•y v·ªã tr√≠ c·ªßa Part ƒë·∫ßu ti√™n
                end
            end
        end
    elseif obj:IsA("BasePart") then
        return obj.Position -- üü¢ N·∫øu l√† BasePart (Part, MeshPart), l·∫•y Position
    else
        return nil -- üõë Kh√¥ng c√≥ v·ªã tr√≠ h·ª£p l·ªá
    end
end


-- üü¢ C·∫≠p nh·∫≠t ESP theo kho·∫£ng c√°ch
game:GetService("RunService").RenderStepped:Connect(function()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local hrp = character:FindFirstChild("HumanoidRootPart")

    if not hrp then return end

    for _, obj in pairs(game.Workspace:GetDescendants()) do
        local objName = obj.Name
        if espTargets[objName] then
            local category = espTargets[objName].category
            local enabled = false
            for _, opt in ipairs(options) do
                if opt.name == category then
                    enabled = opt.enabled
                    break
                end
            end

            local itemPosition = getObjectPosition(obj)
            if not itemPosition then continue end -- üü¢ N·∫øu v·ªã tr√≠ l√† nil, b·ªè qua v·∫≠t th·ªÉ n√†y

            local distance = (itemPosition - hrp.Position).Magnitude

            if enabled and distance <= 1000 then
                if not obj:FindFirstChild("ESP_Tag") then
                    createESP(obj, espTargets[objName].color)
                end
            else
                if obj:FindFirstChild("ESP_Tag") then
                    obj.ESP_Tag:Destroy()
                end
            end
        end
    end
end)
